------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
Microsoft Sync Framework is a data synchronization platform from Microsoft that can be used to synchronize data across multiple data stores .


Treebanked sentence:
--------------------
Microsoft Sync Framework is a data synchronization platform from Microsoft that can be used to synchronize data across multiple data stores . 

Tree:
-----
(ROOT
  (S
    (NP (NNP Microsoft) (NNP Sync) (NNP Framework))
    (VP (VBZ is)
      (NP
        (NP
          (NP (DT a) (NN data) (NN synchronization) (NN platform))
          (PP (IN from)
            (NP (NNP Microsoft))))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (MD can)
              (VP (VB be)
                (VP (VBN used)
                  (S
                    (VP (TO to)
                      (VP (VB synchronize)
                        (NP (NNS data))
                        (PP (IN across)
                          (NP
                            (NML (JJ multiple) (NNS data))
                            (NNS stores)))))))))))))
    (. .)))


Leaves:
-------
	0	Microsoft
			coref:	IDENT			0	0-0	Microsoft 
			coref:	IDENT			2	0-2	Microsoft Sync Framework 
			name:	ORGANIZATION				0-0	Microsoft 
	1	Sync
	2	Framework
	3	is
			sense:	be.v.02
			prop:	be.01
			V		3-3	is 
			N-ARG-A1		0-2	Microsoft Sync Framework 
			N-ARG-A2		4-20	a data synchronization platform from Microsoft that can be used to synchronize data across multiple data stores 
	4	a
	5	data
			sense:	data.n.01
	6	synchronization
			sense:	synchronization.n.02
	7	platform
			sense:	platform.n.03
	8	from
	9	Microsoft
			coref:	IDENT			0	9-9	Microsoft 
			name:	ORGANIZATION				9-9	Microsoft 
	10	that
	11	can
	12	be
			sense:	be.v.01
			prop:	be.03
			V		12-12	be 
	13	used
			sense:	use.v.01
			prop:	use.01
			V		13-13	used 
			N-ARG-A1		4-9	a data synchronization platform from Microsoft 
			R-ARG-A1		10-10	that 
			N-ARGM-MOD		11-11	can 
			N-ARG-A2		14-20	to synchronize data across multiple data stores 
	14	to
	15	synchronize
			sense:	synchronize.v.01
			prop:	synchronize.01
			V		15-15	synchronize 
			N-ARG-A1		16-16	data 
			N-ARGM-LOC		17-20	across multiple data stores 
	16	data
			sense:	datum.n.01
	17	across
	18	multiple
			sense:	multiple.a.01
	19	data
			sense:	datum.n.01
	20	stores
			sense:	memory.n.04
	21	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
Sync Framework includes a transport - agnostic architecture , into which data store - specific synchronization providers , modelled on the ADO.NET data provider API , can be plugged in .


Treebanked sentence:
--------------------
Sync Framework includes a transport - agnostic architecture , into which data store - specific synchronization providers , modelled on the ADO.NET data provider API , can be plugged in . 

Tree:
-----
(ROOT
  (S
    (NP (NNP Sync) (NNP Framework))
    (VP (VBZ includes)
      (NP
        (NP (DT a)
          (ADJP
            (NP (NN transport))
            (HYPH -) (JJ agnostic))
          (NN architecture))
        (, ,)
        (SBAR
          (WHPP (IN into)
            (WHNP (WDT which)))
          (S
            (NP
              (NP
                (NP (NNS data))
                (NP
                  (ADJP (NN store) (HYPH -) (JJ specific))
                  (NN synchronization) (NNS providers)))
              (, ,)
              (VP (VBN modelled)
                (PP (IN on)
                  (NP (DT the)
                    (NML (NN ADO.NET) (NNS data))
                    (NN provider) (NN API))))
              (, ,))
            (VP (MD can)
              (VP (VB be)
                (VP (VBN plugged)
                  (PRT (RP in)))))))))
    (. .)))


Leaves:
-------
	0	Sync
			coref:	IDENT			2	0-1	Sync Framework 
	1	Framework
	2	includes
			sense:	include.v.01
			prop:	include.01
			V		2-2	includes 
			N-ARG-A2		0-1	Sync Framework 
			N-ARG-A1		3-29	a transport - agnostic architecture , into which data store - specific synchronization providers , modelled on the ADO.NET data provider API , can be plugged in 
	3	a
	4	transport
			sense:	conveyance.n.03
	5	-
	6	agnostic
			name:	RELIGION				6-6	agnostic 
			sense:	agnostic.a.01
	7	architecture
			sense:	computer_architecture.n.02
	8	,
	9	into
	10	which
	11	data
			sense:	datum.n.01
	12	store
			sense:	memory.n.04
	13	-
	14	specific
			sense:	specific.a.01
	15	synchronization
			sense:	synchronization.n.02
	16	providers
			sense:	supplier.n.01
	17	,
	18	modelled
			sense:	model.v.01
			prop:	model.01
			V		18-18	modelled 
			N-ARG-A1		11-16	data store - specific synchronization providers 
			N-ARG-A2		19-24	on the ADO.NET data provider API 
	19	on
	20	the
			coref:	IDENT			1	20-24	the ADO.NET data provider API 
	21	ADO.NET
			name:	URL				21-21	ADO.NET 
	22	data
			sense:	datum.n.01
	23	provider
			sense:	supplier.n.01
	24	API
			name:	MISC				24-24	API 
	25	,
	26	can
	27	be
			sense:	be.v.01
			prop:	be.03
			V		27-27	be 
	28	plugged
			sense:	plug.v.05
			prop:	plug.03
			V		28-28	plugged 
			N-ARGM-LOC		3-7	a transport - agnostic architecture 
			R-ARGM-LOC		9-10	into which 
			N-ARG-A1		11-25	data store - specific synchronization providers , modelled on the ADO.NET data provider API , 
			N-ARGM-MOD		26-26	can 
	29	in
	30	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
Sync Framework can be used for offline access to data , by working against a cached set of data and submitting the changes to a master database in a batch , as well as to synchronize changes to a data source across all consumers ( publish / subscribe sync ) and peer - to - peer synchronization of multiple data sources .


Treebanked sentence:
--------------------
Sync Framework can be used for offline access to data , by working against a cached set of data and submitting the changes to a master database in a batch , as well as to synchronize changes to a data source across all consumers ( publish / subscribe sync ) and peer - to - peer synchronization of multiple data sources . 

Tree:
-----
(ROOT
  (S
    (NP (NNP Sync) (NNP Framework))
    (VP (MD can)
      (VP (VB be)
        (VP (VBN used)
          (PP (IN for)
            (NP
              (NP
                (ADVP (RB offline))
                (NN access))
              (PP (IN to)
                (NP (NNS data)))))
          (, ,)
          (PP (IN by)
            (S
              (VP
                (VP (VBG working)
                  (PP (IN against)
                    (NP
                      (NP (DT a) (VBN cached) (NN set))
                      (PP (IN of)
                        (NP (NNS data))))))
                (CC and)
                (VP (VBG submitting)
                  (NP (DT the) (NNS changes))
                  (PP (IN to)
                    (NP
                      (NP
                        (NP (DT a) (NN master) (NN database))
                        (PP (IN in)
                          (NP (DT a) (NN batch))))
                      (, ,)
                      (CONJP (RB as) (RB well) (IN as))
                      (S
                        (VP (TO to)
                          (VP (VB synchronize)
                            (NP (NNS changes))
                            (PP (IN to)
                              (NP
                                (NP
                                  (NP (DT a) (NN data) (NN source))
                                  (PP (IN across)
                                    (NP (DT all) (NNS consumers))))
                                (PRN (-LRB- -LRB-)
                                  (S
                                    (VP (VB publish) (HYPH /)
                                      (VP (VB subscribe)
                                        (NP (NN sync)))))
                                  (-RRB- -RRB-))
                                (CC and)
                                (NP
                                  (NP
                                    (NML (NN peer) (HYPH -) (IN to) (HYPH -) (NN peer))
                                    (NN synchronization))
                                  (PP (IN of)
                                    (NP
                                      (NML (JJ multiple) (NNS data))
                                      (NNS sources))))))))))))))))))
    (. .)))


Leaves:
-------
	0	Sync
			coref:	IDENT			2	0-1	Sync Framework 
	1	Framework
	2	can
	3	be
			sense:	be.v.01
			prop:	be.03
			V		3-3	be 
	4	used
			sense:	use.v.01
			prop:	use.01
			V		4-4	used 
			N-ARG-A1		0-1	Sync Framework 
			N-ARGM-MOD		2-2	can 
			N-ARG-A2		5-9	for offline access to data 
			N-ARGM-MNR		11-29	by working against a cached set of data and submitting the changes to a master database in a batch 
	5	for
	6	offline
	7	access
			sense:	access.n.05
	8	to
	9	data
			sense:	datum.n.01
	10	,
	11	by
	12	working
			sense:	work.v.01
			prop:	work.01
			V		12-12	working 
			N-ARG-A1		13-18	against a cached set of data 
	13	against
	14	a
	15	cached
			sense:	hoard.v.01
			prop:	ache.01
			V		15-15	cached 
	16	set
			sense:	set.n.01
	17	of
	18	data
			sense:	datum.n.01
	19	and
	20	submitting
			sense:	present.v.04
			prop:	submit.01
			V		20-20	submitting 
			N-ARG-A1		21-22	the changes 
			N-ARG-A2		23-26	to a master database 
			N-ARGM-MNR		27-29	in a batch 
	21	the
	22	changes
			sense:	change.n.04
	23	to
	24	a
	25	master
			sense:	master.n.04
	26	database
			sense:	database.n.01
	27	in
	28	a
	29	batch
			sense:	batch.n.03
	30	,
	31	as
			sense:	equally.r.01
	32	well
			sense:	well.r.01
	33	as
	34	to
	35	synchronize
			sense:	synchronize.v.01
			prop:	synchronize.01
			V		35-35	synchronize 
			N-ARG-A0		0-1	Sync Framework 
			N-ARG-A1		36-40	changes to a data source 
			N-ARGM-LOC		41-43	across all consumers 
	36	changes
			sense:	change.n.04
	37	to
	38	a
	39	data
			sense:	data.n.01
	40	source
			sense:	beginning.n.04
	41	across
	42	all
	43	consumers
			sense:	consumer.n.01
	44	(
	45	publish
			sense:	print.v.01
			prop:	publish.01
			V		45-45	publish 
	46	/
	47	subscribe
			sense:	subscribe.v.05
			prop:	subscribe.01
			V		47-47	subscribe 
	48	sync
	49	)
	50	and
	51	peer
			sense:	peer.n.01
	52	-
	53	to
	54	-
	55	peer
			sense:	peer.n.01
	56	synchronization
			sense:	synchronization.n.02
	57	of
	58	multiple
			sense:	multiple.a.01
	59	data
			sense:	datum.n.01
	60	sources
			sense:	beginning.n.04
	61	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
Sync Framework features built - in capabilities for conflict detection – whether data to be changed has already been updated – and can flag them for manual inspection or use defined policies to try to resolve the conflict .


Treebanked sentence:
--------------------
Sync Framework features built - in capabilities for conflict detection – whether data to be changed has already been updated – and can flag them for manual inspection or use defined policies to try to resolve the conflict . 

Tree:
-----
(ROOT
  (S
    (NP (NNP Sync) (NNP Framework))
    (VP (VBZ features)
      (NP
        (NP
          (ADJP (VBN built) (HYPH -) (RP in))
          (NNS capabilities))
        (PP (IN for)
          (NP
            (NP (NN conflict) (NN detection) (SYM –))
            (SBAR (IN whether)
              (S
                (NP (NNS data)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (VP (VBN changed))))))
                (VP
                  (VP (VBZ has)
                    (ADVP (RB already))
                    (VP (VBN been)
                      (VP (VBN updated)
                        (S
                          (NP (SYM –))))))
                  (CC and)
                  (VP (MD can)
                    (VP
                      (VP (VB flag)
                        (NP (PRP them))
                        (PP (IN for)
                          (NP (JJ manual) (NN inspection))))
                      (CC or)
                      (VP (VB use)
                        (NP (VBN defined) (NNS policies))
                        (S
                          (VP (TO to)
                            (VP (VB try)
                              (S
                                (VP (TO to)
                                  (VP (VB resolve)
                                    (NP (DT the) (NN conflict))))))))))))))))))
    (. .)))


Leaves:
-------
	0	Sync
			coref:	IDENT			2	0-1	Sync Framework 
	1	Framework
	2	features
			sense:	have.v.02
			prop:	feature.01
			V		2-2	features 
			N-ARG-A0		0-1	Sync Framework 
			N-ARG-A1		3-9	built - in capabilities for conflict detection 
	3	built
			sense:	construct.v.01
			prop:	build.03
			V		3-3	built 
			N-ARG-A1		6-6	capabilities 
	4	-
	5	in
	6	capabilities
			sense:	capability.n.01
	7	for
	8	conflict
			sense:	conflict.n.04
	9	detection
			sense:	detection.n.01
	10	–
	11	whether
	12	data
			sense:	datum.n.01
	13	to
	14	be
			sense:	be.v.01
			prop:	be.03
			V		14-14	be 
	15	changed
			sense:	change.v.01
			prop:	change.01
			V		15-15	changed 
			N-ARG-A1		12-12	data 
	16	has
			sense:	have.v.01
			prop:	have.01
			V		16-16	has 
	17	already
			sense:	already.r.01
	18	been
			sense:	be.v.01
			prop:	be.03
			V		18-18	been 
	19	updated
			sense:	update.v.02
			prop:	update.01
			V		19-19	updated 
			N-ARG-A1		12-15	data to be changed 
			N-ARGM-TMP		17-17	already 
	20	–
	21	and
	22	can
	23	flag
			sense:	flag.v.01
			prop:	flag.02
			V		23-23	flag 
			N-ARG-A0		0-1	Sync Framework 
			N-ARGM-MOD		22-22	can 
			N-ARG-A1		24-24	them 
	24	them
	25	for
	26	manual
			sense:	manual.a.02
	27	inspection
			sense:	inspection.n.01
	28	or
	29	use
			sense:	use.v.01
			prop:	use.01
			V		29-29	use 
			N-ARG-A0		0-1	Sync Framework 
			N-ARGM-MOD		22-22	can 
			N-ARG-A1		30-31	defined policies 
			N-ARG-A2		32-37	to try to resolve the conflict 
	30	defined
			sense:	specify.v.02
			prop:	define.01
			V		30-30	defined 
			N-ARG-A1		31-31	policies 
	31	policies
			sense:	policy.n.01
	32	to
	33	try
			sense:	try.v.01
			prop:	try.01
			V		33-33	try 
			N-ARG-A1		34-37	to resolve the conflict 
	34	to
	35	resolve
			sense:	decide.v.02
			prop:	resolve.01
			V		35-35	resolve 
			N-ARG-A1		36-37	the conflict 
	36	the
	37	conflict
			sense:	conflict.n.04
	38	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
Sync Services includes an embedded SQL Server Compact database to store metadata about the synchronization relationships as well as about each sync attempt .


Treebanked sentence:
--------------------
Sync Services includes an embedded SQL Server Compact database to store metadata about the synchronization relationships as well as about each sync attempt . 

Tree:
-----
(ROOT
  (S
    (NP (NNP Sync) (NNPS Services))
    (VP (VBZ includes)
      (NP
        (NP (DT an) (VBN embedded) (NN SQL) (NN Server))
        (SBAR
          (S
            (NP (NNP Compact) (NN database))
            (VP (TO to)
              (VP (VB store)
                (NP (NN metadata))
                (PP
                  (PP (IN about)
                    (NP (DT the) (NN synchronization) (NNS relationships)))
                  (CONJP (RB as) (RB well) (IN as))
                  (PP (IN about)
                    (NP (DT each) (NN sync) (NN attempt))))))))))
    (. .)))


Leaves:
-------
	0	Sync
	1	Services
	2	includes
			sense:	include.v.01
			prop:	include.01
			V		2-2	includes 
			N-ARG-A2		0-1	Sync Services 
			N-ARG-A1		3-22	an embedded SQL Server Compact database to store metadata about the synchronization relationships as well as about each sync attempt 
	3	an
	4	embedded
			sense:	implant.v.01
			prop:	embed.01
			V		4-4	embedded 
			N-ARG-A2		5-7	SQL Server Compact 
			N-ARG-A1		8-8	database 
	5	SQL
	6	Server
			sense:	server.n.03
	7	Compact
	8	database
			sense:	database.n.01
	9	to
	10	store
			sense:	store.v.01
			prop:	store.01
			V		10-10	store 
			N-ARG-A0		3-8	an embedded SQL Server Compact database 
			N-ARG-A1		11-22	metadata about the synchronization relationships as well as about each sync attempt 
	11	metadata
			sense:	metadata.n.01
	12	about
	13	the
	14	synchronization
			sense:	synchronism.n.01
	15	relationships
			sense:	relationship.n.01
	16	as
			sense:	equally.r.01
	17	well
			sense:	well.r.02
	18	as
	19	about
	20	each
	21	sync
	22	attempt
			sense:	attempt.n.01
	23	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
The Sync Framework API is surfaced both in managed code , for use with .


Treebanked sentence:
--------------------
The Sync Framework API is surfaced both in managed code , for use with . 

Tree:
-----
(ROOT
  (S
    (NP (DT The)
      (NML (NNP Sync) (NNP Framework))
      (NN API))
    (VP (VBZ is)
      (VP (VBN surfaced)
        (PP (CC both)
          (PP (IN in)
            (NP
              (ADJP (VBN managed))
              (NN code)))
          (, ,)
          (PP (IN for)
            (PP
              (NP (NN use))
              (IN with))))))
    (. .)))


Leaves:
-------
	0	The
			coref:	IDENT			1	0-3	The Sync Framework API 
	1	Sync
	2	Framework
	3	API
	4	is
			sense:	be.v.01
			prop:	be.03
			V		4-4	is 
	5	surfaced
			sense:	come_on.v.01
			prop:	surface.01
			V		5-5	surfaced 
			N-ARG-A1		0-3	The Sync Framework API 
			N-ARGM-MNR		6-7	both in 
			N-ARGM-PRP		11-13	for use with 
	6	both
	7	in
	8	managed
			sense:	oversee.v.01
			prop:	manage.01
			V		8-8	managed 
			N-ARG-A1		9-9	code 
	9	code
			sense:	code.n.03
	10	,
	11	for
	12	use
			sense:	use.n.01
	13	with
	14	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
NET Framework applications , as well as unmanaged code , for use with COM applications .


Treebanked sentence:
--------------------
NET Framework applications , as well as unmanaged code , for use with COM applications . 

Tree:
-----
(ROOT
  (NP
    (NP
      (NP (NN NET) (NNP Framework) (NNS applications))
      (, ,)
      (CONJP (RB as) (RB well) (IN as))
      (NP (JJ unmanaged) (NN code))
      (, ,))
    (PP (IN for)
      (NP (NN use)))
    (PP (IN with)
      (NP (NN COM) (NNS applications)))
    (. .)))


Leaves:
-------
	0	NET
			sense:	internet.n.01
	1	Framework
	2	applications
			sense:	application.n.04
	3	,
	4	as
			sense:	equally.r.01
	5	well
			sense:	well.r.02
	6	as
	7	unmanaged
	8	code
			sense:	code.n.03
	9	,
	10	for
	11	use
			sense:	use.n.01
	12	with
	13	COM
	14	applications
			sense:	application.n.04
	15	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
It was scheduled to ship with Visual Studio 2008 in late November 2007 .


Treebanked sentence:
--------------------
It was scheduled to ship with Visual Studio 2008 in late November 2007 . 

Tree:
-----
(ROOT
  (S
    (NP (PRP It))
    (VP (VBD was)
      (VP (VBN scheduled)
        (S
          (VP (TO to)
            (VP (VB ship)
              (PP (IN with)
                (NP (JJ Visual) (NNP Studio) (CD 2008)))
              (PP (IN in)
                (NP (JJ late) (NNP November) (CD 2007))))))))
    (. .)))


Leaves:
-------
	0	It
			coref:	IDENT			1	0-0	It 
	1	was
			sense:	be.v.01
			prop:	be.03
			V		1-1	was 
	2	scheduled
			sense:	schedule.v.01
			prop:	schedule.01
			V		2-2	scheduled 
			N-ARG-A1		0-0	It 
			N-ARG-A2		3-12	to ship with Visual Studio 2008 in late November 2007 
	3	to
	4	ship
			sense:	transport.v.04
			prop:	ship.01
			V		4-4	ship 
			N-ARG-A1		0-0	It 
			N-ARGM-MNR		5-8	with Visual Studio 2008 
			N-ARGM-TMP		9-12	in late November 2007 
	5	with
	6	Visual
			sense:	ocular.s.03
	7	Studio
	8	2008
			name:	DATE				8-8	2008 
	9	in
	10	late
			name:	DATE				10-12	late November 2007 
			sense:	late.a.01
	11	November
	12	2007
	13	.


========================================================================================================================
Coreference chains for section 0:
---------------------------------

	Chain 0 (IDENT)
				0.0-0	Microsoft 
				0.9-9	Microsoft 
	Chain 1 (IDENT)
				1.20-24	the ADO.NET data provider API 
				5.0-3	The Sync Framework API 
				7.0-0	It 
	Chain 2 (IDENT)
				0.0-2	Microsoft Sync Framework 
				1.0-1	Sync Framework 
				2.0-1	Sync Framework 
				3.0-1	Sync Framework 

