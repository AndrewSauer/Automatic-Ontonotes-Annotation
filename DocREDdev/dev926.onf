------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
The Enterprise Objects Framework , or more commonly simply EOF , was introduced by NeXT in 1994 as a pioneering object - relational mapping product for its NeXTSTEP and OpenStep development platforms .


Treebanked sentence:
--------------------
The Enterprise Objects Framework , or more commonly simply EOF , was introduced by NeXT in 1994 as a pioneering object - relational mapping product for its NeXTSTEP and OpenStep development platforms . 

Tree:
-----
(ROOT
  (S
    (NP
      (NP (DT The) (NNP Enterprise) (NNPS Objects) (NNP Framework))
      (, ,)
      (RRC
        (ADVP
          (NP
            (QP (CC or)
              (JJR more)))
          (RB commonly))
        (ADVP (RB simply))
        (NP (NNP EOF)))
      (, ,))
    (VP (VBD was)
      (VP (VBN introduced)
        (PP (IN by)
          (NP (NNP NeXT)))
        (PP (IN in)
          (NP (CD 1994)))
        (PP (IN as)
          (NP
            (NP (DT a)
              (ADJP
                (NP (JJ pioneering) (NN object))
                (HYPH -) (JJ relational))
              (NN mapping) (NN product))
            (PP (IN for)
              (NP (PRP$ its)
                (NML (NNP NeXTSTEP)
                  (CC and)
                  (NNP OpenStep))
                (NN development) (NNS platforms)))))))
    (. .)))


Leaves:
-------
	0	The
	1	Enterprise
	2	Objects
	3	Framework
	4	,
	5	or
	6	more
			sense:	more.a.01
	7	commonly
			sense:	normally.r.01
	8	simply
			sense:	merely.r.01
	9	EOF
	10	,
	11	was
			sense:	be.v.01
			prop:	be.03
			V		11-11	was 
	12	introduced
			sense:	introduce.v.02
			prop:	introduce.02
			V		12-12	introduced 
			N-ARG-A1		0-9	The Enterprise Objects Framework , or more commonly simply EOF 
			N-ARG-A0		13-14	by NeXT 
			N-ARGM-TMP		15-16	in 1994 
			N-ARGM-PRD		17-31	as a pioneering object - relational mapping product for its NeXTSTEP and OpenStep development platforms 
	13	by
	14	NeXT
			coref:	IDENT			0	14-14	NeXT 
	15	in
	16	1994
			name:	DATE				16-16	1994 
	17	as
	18	a
	19	pioneering
	20	object
			sense:	object.n.05
	21	-
	22	relational
			sense:	relational.s.01
	23	mapping
			sense:	function.n.01
	24	product
			sense:	product.n.02
	25	for
	26	its
	27	NeXTSTEP
	28	and
	29	OpenStep
	30	development
			sense:	development.n.01
	31	platforms
			sense:	platform.n.03
	32	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
EOF abstracts the process of interacting with a relational database by mapping database rows to Java or Objective - C objects .


Treebanked sentence:
--------------------
EOF abstracts the process of interacting with a relational database by mapping database rows to Java or Objective - C objects . 

Tree:
-----
(ROOT
  (FRAG
    (NP (NN EOF) (NNS abstracts))
    (NP
      (NP (DT the) (NN process))
      (PP (IN of)
        (S
          (VP (VBG interacting)
            (PP (IN with)
              (NP (DT a) (JJ relational) (NN database)))
            (PP (IN by)
              (S
                (VP (VBG mapping)
                  (NP (NN database) (NNS rows))
                  (PP (IN to)
                    (NP
                      (NP (NNP Java))
                      (CC or)
                      (NP
                        (NML (NNP Objective) (HYPH -) (NNP C))
                        (NNS objects)))))))))))
    (. .)))


Leaves:
-------
	0	EOF
	1	abstracts
			sense:	abstraction.n.01
	2	the
	3	process
			sense:	procedure.n.01
	4	of
	5	interacting
			sense:	interact.v.01
			prop:	interact.01
			V		5-5	interacting 
			N-ARG-A1		6-9	with a relational database 
	6	with
	7	a
	8	relational
			sense:	relational.s.01
	9	database
			sense:	database.n.01
	10	by
	11	mapping
			sense:	map.v.06
			prop:	mapping.01
			V		11-11	mapping 
			N-ARG-A1		12-13	database rows 
	12	database
			sense:	database.n.01
	13	rows
			sense:	row.n.05
	14	to
	15	Java
			name:	MISC				15-15	Java 
	16	or
	17	Objective
	18	-
	19	C
	20	objects
			sense:	object.n.05
	21	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
This largely relieves developers from writing low - level SQL code .


Treebanked sentence:
--------------------
This largely relieves developers from writing low - level SQL code . 

Tree:
-----
(ROOT
  (S
    (NP (DT This))
    (ADVP (RB largely))
    (VP (VBZ relieves)
      (NP (NNS developers))
      (PP (IN from)
        (S
          (VP (VBG writing)
            (NP
              (NML (JJ low) (HYPH -) (NN level))
              (NN SQL) (NN code))))))
    (. .)))


Leaves:
-------
	0	This
	1	largely
			sense:	largely.r.01
	2	relieves
			sense:	relieve.v.08
			prop:	relieve.01
			V		2-2	relieves 
			N-ARG-A0		0-0	This 
			N-ARGM-ADV		1-1	largely 
			N-ARG-A2		3-3	developers 
			N-ARG-A1		4-10	from writing low - level SQL code 
	3	developers
			sense:	developer.n.01
	4	from
	5	writing
			sense:	write.v.10
			prop:	write.01
			V		5-5	writing 
			N-ARG-A0		3-3	developers 
			N-ARG-A1		6-10	low - level SQL code 
	6	low
			sense:	low.a.01
	7	-
	8	level
			sense:	grade.n.02
	9	SQL
	10	code
			sense:	code.n.03
	11	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
EOF enjoyed some niche success in the mid-1990s among financial institutions who were attracted to the rapid application development advantages of NeXT 's object - oriented platform .


Treebanked sentence:
--------------------
EOF enjoyed some niche success in the mid-1990s among financial institutions who were attracted to the rapid application development advantages of NeXT 's object - oriented platform . 

Tree:
-----
(ROOT
  (S
    (NP (NNP EOF))
    (VP (VBD enjoyed)
      (NP (DT some) (NN niche) (NN success))
      (PP (IN in)
        (NP (DT the) (NNS mid-1990s)))
      (PP (IN among)
        (NP
          (NP (JJ financial) (NNS institutions))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD were)
                (VP (VBN attracted)
                  (PP (IN to)
                    (NP (DT the)
                      (ADJP
                        (NP
                          (NP (JJ rapid) (NN application) (NN development) (NNS advantages))
                          (PP (IN of)
                            (NP
                              (NP (NNP NeXT) (POS 's))
                              (NN object))))
                        (HYPH -) (VBN oriented))
                      (NN platform))))))))))
    (. .)))


Leaves:
-------
	0	EOF
	1	enjoyed
			sense:	enjoy.v.02
			prop:	enjoy.01
			V		1-1	enjoyed 
			N-ARG-A0		0-0	EOF 
			N-ARG-A1		2-4	some niche success 
			N-ARGM-TMP		5-7	in the mid-1990s 
			N-ARGM-LOC		8-26	among financial institutions who were attracted to the rapid application development advantages of NeXT 's object - oriented platform 
	2	some
	3	niche
			sense:	niche.n.01
	4	success
			sense:	success.n.02
	5	in
	6	the
			name:	DATE				6-7	the mid-1990s 
	7	mid-1990s
	8	among
	9	financial
			sense:	fiscal.a.01
	10	institutions
			sense:	institution.n.01
	11	who
	12	were
			sense:	be.v.01
			prop:	be.03
			V		12-12	were 
	13	attracted
			sense:	attract.v.01
			prop:	attract.01
			V		13-13	attracted 
			N-ARG-A1		9-10	financial institutions 
			R-ARG-A1		11-11	who 
			N-ARG-A2		14-26	to the rapid application development advantages of NeXT 's object - oriented platform 
	14	to
	15	the
	16	rapid
			sense:	rapid.s.01
	17	application
			sense:	application.n.04
	18	development
			sense:	development.n.01
	19	advantages
			sense:	advantage.n.01
	20	of
	21	NeXT
			coref:	IDENT			0	21-22	NeXT 's 
	22	's
	23	object
			sense:	object.n.05
	24	-
	25	oriented
			sense:	orient.v.01
			prop:	orient.01
			V		25-25	oriented 
			N-ARG-A1		26-26	platform 
	26	platform
			sense:	platform.n.03
	27	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
Since Apple Inc 's merger with NeXT in 1996 , EOF has evolved into a fully integrated part of WebObjects , an application server also originally from NeXT .


Treebanked sentence:
--------------------
Since Apple Inc 's merger with NeXT in 1996 , EOF has evolved into a fully integrated part of WebObjects , an application server also originally from NeXT . 

Tree:
-----
(ROOT
  (S
    (PP (IN Since)
      (NP
        (NP
          (NP (NNP Apple) (NNP Inc) (POS 's))
          (NN merger))
        (PP (IN with)
          (NP
            (NP (NN NeXT))
            (PP (IN in)
              (NP (CD 1996)))))))
    (, ,)
    (NP (NN EOF))
    (VP (VBZ has)
      (VP (VBN evolved)
        (PP (IN into)
          (NP
            (NP (DT a)
              (ADJP (RB fully) (VBN integrated))
              (NN part))
            (PP (IN of)
              (NP
                (NP (NNP WebObjects))
                (, ,)
                (NP (DT an) (NN application) (NN server))))))
        (ADVP (RB also))
        (PP
          (ADVP (RB originally))
          (IN from)
          (NP (NNP NeXT)))))
    (. .)))


Leaves:
-------
	0	Since
	1	Apple
			name:	ORGANIZATION				1-2	Apple Inc 
	2	Inc
	3	's
	4	merger
			sense:	amalgamation.n.01
	5	with
	6	NeXT
	7	in
	8	1996
			name:	DATE				8-8	1996 
	9	,
	10	EOF
	11	has
			sense:	have.v.11
			prop:	have.01
			V		11-11	has 
	12	evolved
			sense:	develop.v.03
			prop:	evolve.01
			V		12-12	evolved 
			N-ARGM-TMP		0-8	Since Apple Inc 's merger with NeXT in 1996 
			N-ARG-A1		10-10	EOF 
			N-ARG-A2		13-27	into a fully integrated part of WebObjects , an application server also originally from NeXT 
	13	into
	14	a
	15	fully
			sense:	fully.r.01
	16	integrated
			sense:	integrate.v.01
			prop:	integrate.01
			V		16-16	integrated 
			N-ARGM-EXT		15-15	fully 
			N-ARG-A1		17-17	part 
	17	part
			sense:	part.n.01
	18	of
	19	WebObjects
	20	,
	21	an
	22	application
			sense:	application.n.04
	23	server
			sense:	server.n.03
	24	also
			sense:	besides.r.02
	25	originally
			sense:	primitively.r.01
	26	from
	27	NeXT
	28	.


------------------------------------------------------------------------------------------------------------------------

Plain sentence:
---------------
Many of the core concepts of EOF re - emerged as part of Core Data , which further abstracts the underlying data formats to allow it to be based on non - SQL stores .


Treebanked sentence:
--------------------
Many of the core concepts of EOF re - emerged as part of Core Data , which further abstracts the underlying data formats to allow it to be based on non - SQL stores . 

Tree:
-----
(ROOT
  (NP
    (NP
      (ADJP (JJ Many)
        (PP (IN of)
          (NP
            (NP (DT the) (NN core) (NNS concepts))
            (PP (IN of)
              (NP (NNP EOF)))))
        (PP (IN re) (HYPH -)
          (S
            (VP (VBN emerged)
              (PP (IN as)
                (NP
                  (NP (NN part))
                  (PP (IN of)
                    (NP
                      (NP (NNP Core) (NNP Data))
                      (, ,)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (NP
                            (NP (JJ further) (NNS abstracts))
                            (NP (DT the) (VBG underlying) (NNS data)))))))))))))
      (NNS formats))
    (S
      (VP (TO to)
        (VP (VB allow)
          (S
            (NP (PRP it))
            (VP (TO to)
              (VP (VB be)
                (VP (VBN based)
                  (PP (IN on)
                    (NP
                      (NML (AFX non) (HYPH -) (NN SQL))
                      (NNS stores))))))))))
    (. .)))


Leaves:
-------
	0	Many
			sense:	many.a.01
	1	of
	2	the
	3	core
			sense:	kernel.n.03
	4	concepts
			sense:	concept.n.01
	5	of
	6	EOF
	7	re
	8	-
	9	emerged
			sense:	emerge.v.03
			prop:	emerge.01
			V		9-9	emerged 
			N-ARG-A0		0-6	Many of the core concepts of EOF 
			N-ARGM-ADV		7-8	re - 
			N-ARGM-PRD		10-33	as part of Core Data , which further abstracts the underlying data formats to allow it to be based on non - SQL stores 
	10	as
	11	part
			sense:	part.n.01
	12	of
	13	Core
	14	Data
	15	,
	16	which
	17	further
			sense:	further.s.01
	18	abstracts
			sense:	abstraction.n.01
	19	the
	20	underlying
			sense:	underlie.v.01
			prop:	underlie.01
			V		20-20	underlying 
			N-ARG-A0		21-22	data formats 
	21	data
			sense:	datum.n.01
	22	formats
			sense:	format.n.01
	23	to
	24	allow
			sense:	let.v.01
			prop:	allow.01
			V		24-24	allow 
			N-ARG-A1		25-33	it to be based on non - SQL stores 
	25	it
	26	to
	27	be
			sense:	be.v.01
			prop:	be.03
			V		27-27	be 
	28	based
			sense:	establish.v.08
			prop:	base.02
			V		28-28	based 
			N-ARG-A1		25-25	it 
			N-ARG-A2		29-33	on non - SQL stores 
	29	on
	30	non
	31	-
	32	SQL
	33	stores
			sense:	memory.n.04
	34	.


========================================================================================================================
Coreference chains for section 0:
---------------------------------

	Chain 0 (IDENT)
				3.21-22	NeXT 's 
				0.14-14	NeXT 

